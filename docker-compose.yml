version: '3.8'

services:
  # Banco de dados para metadados, usuários e configurações
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: analisaja
      POSTGRES_PASSWORD: analisaja_password
      POSTGRES_DB: analisaja
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analisaja"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Sistema de armazenamento de objetos para datasets e modelos
  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: analisaja
      MINIO_ROOT_PASSWORD: analisaja_password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  # Sistema de filas para processamento assíncrono
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: analisaja
      RABBITMQ_DEFAULT_PASS: analisaja_password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # API Gateway
  gateway-api:
    build: ./gateway-api
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
    depends_on:
      - upload-api
      - training-api
      - evaluation-api
      - prediction-api

  # API de Upload e Processamento
  upload-api:
    build: ./upload-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://analisaja:analisaja_password@postgres:5432/analisaja
      - RABBITMQ_URL=amqp://analisaja:analisaja_password@rabbitmq:5672
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=analisaja
      - MINIO_SECRET_KEY=analisaja_password
      - MINIO_USE_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # API de Treinamento de Modelos
  training-api:
    build: ./training-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://analisaja:analisaja_password@postgres:5432/analisaja
      - RABBITMQ_URL=amqp://analisaja:analisaja_password@rabbitmq:5672
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=analisaja
      - MINIO_SECRET_KEY=analisaja_password
      - MINIO_USE_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # API de Avaliação de Modelos
  evaluation-api:
    build: ./evaluation-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://analisaja:analisaja_password@postgres:5432/analisaja
      - RABBITMQ_URL=amqp://analisaja:analisaja_password@rabbitmq:5672
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=analisaja
      - MINIO_SECRET_KEY=analisaja_password
      - MINIO_USE_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # API de Predição
  prediction-api:
    build: ./prediction-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://analisaja:analisaja_password@postgres:5432/analisaja
      - RABBITMQ_URL=amqp://analisaja:analisaja_password@rabbitmq:5672
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=analisaja
      - MINIO_SECRET_KEY=analisaja_password
      - MINIO_USE_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data: